import streamlit as st
import pandas as pd 
from gestion_corpus import gestion_corpus
from extraccion_terminos import extraccion_terminologica
from validacion_terminos import validacion_terminos
from acerca_de import acerca_de  # Importamos la secci√≥n "Acerca de"

# Inicializar el estado de sesi√≥n para la navegaci√≥n
if "pagina" not in st.session_state:
    st.session_state.pagina = "Inicio"

# üîπ CSS para cambiar los colores de los botones y marcar el activo üîπ
st.sidebar.markdown(
    f"""
    <style>
    .stButton > button {{
        width: 100%;
        border-radius: 8px;
        border: none;
        font-size: 16px;
        font-weight: bold;
        padding: 10px;
        transition: 0.3s;
        color: white;
    }}

    /* üé® Tonos de morado y rosa */
    .stButton:nth-child(1) button {{ background-color: #7B1FA2; }} /* Morado oscuro */
    .stButton:nth-child(2) button {{ background-color: #9C27B0; }} /* Morado medio */
    .stButton:nth-child(3) button {{ background-color: #BA68C8; }} /* Morado suave */
    .stButton:nth-child(4) button {{ background-color: #E91E63; }} /* Rosa fuerte */
    .stButton:nth-child(5) button {{ background-color: #F48FB1; }} /* Rosa pastel */

    /* Efecto hover */
    .stButton > button:hover {{
        filter: brightness(90%);
    }}

    /* üîπ Negrita para el bot√≥n activo */
    .stButton-active > button {{
        font-weight: 900;
        border: 2px solid white;
    }}
    </style>
    """,
    unsafe_allow_html=True
)

# üìå Men√∫ lateral con botones de colores
st.sidebar.markdown("### Navegador")

def styled_button(label, page):
    if st.session_state.pagina == page:
        st.markdown(f'<div class="stButton-active">', unsafe_allow_html=True)
        clicked = st.sidebar.button(label)
        st.markdown('</div>', unsafe_allow_html=True)
    else:
        clicked = st.sidebar.button(label)
    if clicked:
        st.session_state.pagina = page

# Agregar botones con la funci√≥n estilizada
styled_button("Inicio", "Inicio")
styled_button("Gesti√≥n de corpus", "Gesti√≥n de corpus")
styled_button("Extracci√≥n terminol√≥gica", "Extracci√≥n terminol√≥gica")
styled_button("Validaci√≥n de t√©rminos", "Validaci√≥n de t√©rminos")
styled_button("Acerca de", "Acerca de")

# ------------------------------
# Funcionalidad 0: Pantalla de Inicio
# ------------------------------
if st.session_state.pagina == "Inicio":
    st.title("TermoLing, una estaci√≥n de trabajo terminogr√°fico")
    st.markdown(
        """
        Esta es una aplicaci√≥n creada para la gesti√≥n y miner√≠a de textos, especialmente dise√±ada para el trabajo terminogr√°fico.
        
        **¬øQu√© puedes hacer aqu√≠?**
        
        - **Gesti√≥n de corpus** ‚Üí Subir archivos `.txt` (codificados en UTF-8) y estructurar un corpus con metadatos.
        - **Extracci√≥n terminol√≥gica** ‚Üí Extraer t√©rminos mediante m√©todos como **TF-IDF, POS Tagging y C-Value**.
        - **Validaci√≥n de t√©rminos** ‚Üí Subir un archivo `.csv` con t√©rminos extra√≠dos y validar los candidatos a t√©rmino.
        
        Usa el men√∫ lateral para navegar entre las distintas funciones.
        """
    )

# ------------------------------
# Funcionalidad 1: Gesti√≥n de corpus
# ------------------------------
elif st.session_state.pagina == "Gesti√≥n de corpus":
    gestion_corpus()

# ------------------------------
# Funcionalidad 2: Extracci√≥n terminol√≥gica
# ------------------------------
elif st.session_state.pagina == "Extracci√≥n terminol√≥gica":
    extraccion_terminologica()

# ------------------------------
# Funcionalidad 3: Validaci√≥n de t√©rminos
# ------------------------------
elif st.session_state.pagina == "Validaci√≥n de t√©rminos":
    validacion_terminos()

# ------------------------------
# Funcionalidad 4: Acerca de
# ------------------------------
elif st.session_state.pagina == "Acerca de":
    acerca_de()
