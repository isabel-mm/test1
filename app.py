import streamlit as st
import pandas as pd 
from gestion_corpus import gestion_corpus
from extraccion_terminos import extraccion_terminologica
from validacion_terminos import validacion_terminos
from acerca_de import acerca_de

# Inicializar el estado de sesi√≥n para la navegaci√≥n
if "pagina" not in st.session_state:
    st.session_state.pagina = "Inicio"

# üîπ CSS para personalizar los botones y marcar el activo üîπ
st.sidebar.markdown(
    """
    <style>
    .sidebar-buttons {
        display: flex;
        flex-direction: column;
        align-items: center;
    }
    
    .sidebar-buttons button {
        width: 80%;  /* üîπ Reducimos el ancho de los botones */
        border-radius: 8px;
        border: none;
        font-size: 16px;
        font-weight: bold;
        padding: 10px;
        margin-bottom: 5px;
        transition: 0.3s;
        text-align: center;
    }

    /* üé® Colores espec√≠ficos para cada bot√≥n */
    .btn-1 { background-color: #7B1FA2; color: white; } /* Morado oscuro */
    .btn-2 { background-color: #9C27B0; color: white; } /* Morado medio */
    .btn-3 { background-color: #BA68C8; color: white; } /* Morado suave */
    .btn-4 { background-color: #E91E63; color: white; } /* Rosa fuerte */
    .btn-5 { background-color: #F48FB1; color: white; } /* Rosa pastel */

    .sidebar-buttons button:hover {
        filter: brightness(85%);
    }

    /* üîπ Negrita y borde para el bot√≥n activo */
    .active {
        font-weight: 900;
        border: 2px solid white;
    }
    </style>
    """,
    unsafe_allow_html=True
)

# üìå Men√∫ lateral con botones de colores y ancho reducido
st.sidebar.markdown('<div class="sidebar-buttons">', unsafe_allow_html=True)

def styled_button(label, page, btn_class):
    """Crea un bot√≥n estilizado con color y cambia la p√°gina activa."""
    active_class = "active" if st.session_state.pagina == page else ""
    clicked = st.sidebar.markdown(
        f'<button class="{btn_class} {active_class}" onclick="window.location.reload()">{label}</button>',
        unsafe_allow_html=True,
    )
    if st.session_state.pagina == page:
        st.session_state.pagina = page

# Agregar botones con estilos personalizados
styled_button("Inicio", "Inicio", "btn-1")
styled_button("Gesti√≥n de corpus", "Gesti√≥n de corpus", "btn-2")
styled_button("Extracci√≥n terminol√≥gica", "Extracci√≥n terminol√≥gica", "btn-3")
styled_button("Validaci√≥n de t√©rminos", "Validaci√≥n de t√©rminos", "btn-4")
styled_button("Acerca de", "Acerca de", "btn-5")

st.sidebar.markdown('</div>', unsafe_allow_html=True)

# ------------------------------
# Funcionalidad 0: Pantalla de Inicio
# ------------------------------
if st.session_state.pagina == "Inicio":
    st.title("TermoLing, una estaci√≥n de trabajo terminogr√°fico")
    st.markdown(
        """
        Esta es una aplicaci√≥n creada para la gesti√≥n y miner√≠a de textos, especialmente dise√±ada para el trabajo terminogr√°fico.
        
        **¬øQu√© puedes hacer aqu√≠?**
        
        - **Gesti√≥n de corpus** ‚Üí Subir archivos `.txt` (codificados en UTF-8) y estructurar un corpus con metadatos.
        - **Extracci√≥n terminol√≥gica** ‚Üí Extraer t√©rminos mediante m√©todos como **TF-IDF, POS Tagging y C-Value**.
        - **Validaci√≥n de t√©rminos** ‚Üí Subir un archivo `.csv` con t√©rminos extra√≠dos y validar los candidatos a t√©rmino.
        
        Usa el men√∫ lateral para navegar entre las distintas funciones.
        """
    )

# ------------------------------
# Funcionalidad 1: Gesti√≥n de corpus
# ------------------------------
elif st.session_state.pagina == "Gesti√≥n de corpus":
    gestion_corpus()

# ------------------------------
# Funcionalidad 2: Extracci√≥n terminol√≥gica
# ------------------------------
elif st.session_state.pagina == "Extracci√≥n terminol√≥gica":
    extraccion_terminologica()

# ------------------------------
# Funcionalidad 3: Validaci√≥n de t√©rminos
# ------------------------------
elif st.session_state.pagina == "Validaci√≥n de t√©rminos":
    validacion_terminos()

# ------------------------------
# Funcionalidad 4: Acerca de
# ------------------------------
elif st.session_state.pagina == "Acerca de":
    acerca_de()
